import { Link } from 'next-view-transitions'
import type { Metadata } from 'next/types'

import { ArrowLeftIcon, ChevronRightIcon } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { notFound } from 'next/navigation'
import { contentLayer } from '@/providers/content-layer'
import { generateMetadata as baseGenerateMetadata } from '@/utils/metadata.utils'

// Configure dynamic behavior
export const dynamic = 'force-dynamic'
export const dynamicParams = true // Allow dynamic params that aren't generated by generateStaticParams

interface PageProps {
  params: Promise<{
    category: string
  }>
}

export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  const { category: categorySlug } = await params
  const posts = await contentLayer.listPostsGroupedBy({
    type: 'help',
    // @ts-expect-error - field is required
    field: 'category',
    orderBy: 'date',
    order: 'desc',
  })
  const category = posts[categorySlug]

  if (!category) {
    return baseGenerateMetadata({
      title: 'Category Not Found',
      description: 'The help category you are looking for could not be found.',
      path: `/help/${categorySlug}`,
      noIndex: true,
    })
  }

  // Format the category name for display
  const categoryName = categorySlug
    .split('-')
    .map((word: string) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ')

  // Generate keywords based on category name
  const keywords = [
    `${categoryName} Help`,
    'Support Articles',
    'Help Center',
    'User Guides',
  ]

  return baseGenerateMetadata({
    title: `${categoryName}`,
    description: `Articles and tutorials about ${categoryName}. Find answers to your questions in this category.`,
    path: `/help/${categorySlug}`,
    keywords,
  })
}

export default async function HelpCategoryPage({ params }: PageProps) {
  const { category: categorySlug } = await params

  const posts = await contentLayer.listPostsGroupedBy({
    type: 'help',
    // @ts-expect-error - field is required
    field: 'category',
    orderBy: 'date',
    order: 'desc',
  })
  const category = posts[categorySlug]

  if (!category) return notFound()

  return (
    <div className="container mx-auto max-w-screen-md px-4 py-12 space-y-8">
      <div className="space-y-6">
        <Link href="/help">
          <Button variant="link" className="gap-2 px-0" size="sm">
            <ArrowLeftIcon className="h-4 w-4" />
            Voltar para o Help Center
          </Button>
        </Link>

        <div>
          <h1 className="text-3xl font-bold mb-4">{categorySlug}</h1>
          <p className="text-muted-foreground max-w-2xl">{categorySlug}</p>
        </div>
      </div>

      <div className="grid grid-cols-1 gap-6">
        {category.map((post, index) => (
          <Link
            href={`/help/${post.slug}`}
            key={index}
            className="flex gap-4 p-4 text-sm w-full items-center justify-between hover:bg-secondary cursor-pointer transition-colors"
          >
            <h3 className="text-sm">{post.data.title}</h3>
            <ChevronRightIcon className="size-4" />
          </Link>
        ))}
      </div>

      <div className="pt-8">
        <h2 className="text-xl font-semibold mb-4">
          Não encontrou o que procurava?
        </h2>
        <div className="bg-secondary/40 border rounded-md p-6">
          <p className="text-muted-foreground mb-4">
            Nossa equipe de suporte está pronta para ajudar com qualquer dúvida
            sobre {categorySlug}.
          </p>
          <div className="flex gap-3">
            <Button>Contatar suporte</Button>
            <Button variant="outline">Ver outras categorias</Button>
          </div>
        </div>
      </div>
    </div>
  )
}
